{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-22T10:31:18.442Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-22T10:31:18.443Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-22T10:31:18.443Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-22T10:31:18.443Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-22T10:31:18.443Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-22T10:31:18.443Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-22T10:59:39.247Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-22T10:59:39.248Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-22T10:59:39.248Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-22T10:59:39.248Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-22T10:59:39.248Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-22T10:59:39.248Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-22T11:01:31.339Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-22T11:01:31.340Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-22T11:01:31.340Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-22T11:01:31.340Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-22T11:01:31.340Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-22T11:01:31.340Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T09:51:45.016Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T09:58:41.150Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T09:58:41.150Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T09:58:41.150Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T09:58:41.151Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T09:58:41.151Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T09:58:41.151Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:01:35.050Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:01:35.050Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:01:35.051Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:01:35.051Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:01:35.051Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:01:35.051Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:04:15.216Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:04:15.216Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:04:15.216Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:04:15.216Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:04:15.217Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:04:15.217Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:13:33.046Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:13:33.046Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:13:33.046Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:13:33.047Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:13:33.047Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:13:33.047Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:19:57.305Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:19:57.305Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:19:57.306Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:19:57.306Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:19:57.306Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:19:57.306Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:26:03.218Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:26:03.218Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:26:03.219Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:26:03.219Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:26:03.219Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:26:03.219Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:43:46.627Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:43:46.628Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:43:46.628Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:43:46.628Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:43:46.628Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:43:46.628Z"}
{"level":"info","message":"Initializing TEN Framework...","timestamp":"2025-09-28T10:47:25.786Z"}
{"level":"info","message":"Registering multimodal extensions...","timestamp":"2025-09-28T10:47:25.786Z"}
{"level":"info","message":"All multimodal extensions registered successfully","timestamp":"2025-09-28T10:47:25.787Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent...","timestamp":"2025-09-28T10:47:25.787Z"}
{"level":"info","message":"Medical diagnosis agent created successfully","timestamp":"2025-09-28T10:47:25.787Z"}
{"level":"info","message":"TEN Framework initialized successfully","timestamp":"2025-09-28T10:47:25.787Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T20:06:07.360Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T20:06:07.373Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T20:06:07.373Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T20:07:41.444Z"}
{"level":"info","message":"TEN Framework service connection successful","timestamp":"2025-09-30T20:07:41.460Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T20:07:41.460Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T20:18:36.820Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T20:18:36.832Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T20:18:36.832Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T20:46:02.849Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T20:46:02.862Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T20:46:02.863Z"}
{"level":"error","message":"Failed to generate conversation response with real TEN Framework: Medical agent not initialized","stack":"Error: Medical agent not initialized\n    at TENFrameworkManager.generateConversationResponse (/app/src/ten-framework/ten-manager.js:419:23)\n    at /app/src/api/routes/multimodal.js:98:55\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-09-30T20:57:46.755Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:02:48.707Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:02:48.720Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:02:48.720Z"}
{"level":"error","message":"Failed to generate conversation response with real TEN Framework: Medical agent not initialized","stack":"Error: Medical agent not initialized\n    at TENFrameworkManager.generateConversationResponse (/app/src/ten-framework/ten-manager.js:419:23)\n    at /app/src/api/routes/multimodal.js:98:55\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-09-30T21:04:14.643Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:05:21.681Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:05:21.692Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:05:21.693Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:06:19.424Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:06:19.436Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:06:19.436Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:07:06.560Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:07:06.574Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:07:06.574Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:07:06.574Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:07:06.574Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:07:06.575Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:07:06.575Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:07:06.575Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:07:44.485Z"}
{"level":"warn","message":"TEN Agent conversation generation failed, using fallback:","timestamp":"2025-09-30T21:07:44.485Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:08:43.077Z"}
{"level":"warn","message":"TEN Agent conversation generation failed, using fallback:","timestamp":"2025-09-30T21:08:43.077Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:19:46.683Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:19:46.707Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:19:46.707Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:19:46.707Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:19:46.707Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:19:46.707Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:19:46.708Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:19:46.708Z"}
{"cause":{"code":"EAI_AGAIN","errno":-3001,"hostname":"ten-agent","syscall":"getaddrinfo"},"code":"EAI_AGAIN","config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"maxBodyLength":-1,"maxContentLength":-1,"method":"get","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"http://ten-agent:8080/health","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errno":-3001,"hostname":"ten-agent","level":"error","message":"TEN Framework health check failed: getaddrinfo EAI_AGAIN ten-agent","name":"Error","request":{"_currentRequest":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":"[Circular]","_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_currentUrl":"http://ten-agent:8080/health","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"hostname":"ten-agent","maxBodyLength":null,"maxRedirects":21,"method":"GET","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":"[Circular]","chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":[],"map":{}},"agentKeepAliveTimeoutBuffer":1000,"defaultPort":443,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"defaultPort":443,"keepAlive":true,"noDelay":true,"path":null,"protocol":"https:","scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0}}},"path":"/health","pathname":"/health","port":"8080","protocol":"http:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":0,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"stack":"Error: getaddrinfo EAI_AGAIN ten-agent\n    at AxiosError.from (/app/node_modules/axios/dist/node/axios.cjs:905:14)\n    at RedirectableRequest.handleRequestError (/app/node_modules/axios/dist/node/axios.cjs:3326:25)\n    at RedirectableRequest.emit (node:events:508:28)\n    at eventHandlers.<computed> (/app/node_modules/follow-redirects/index.js:49:24)\n    at ClientRequest.emit (node:events:508:28)\n    at emitErrorEvent (node:_http_client:107:11)\n    at Socket.socketErrorListener (node:_http_client:574:5)\n    at Socket.emit (node:events:508:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at Axios.request (/app/node_modules/axios/dist/node/axios.cjs:4483:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TENFrameworkManager.healthCheck (/app/src/ten-framework/ten-manager.js:554:30)\n    at async TENTestSuite.testHealthCheck (/app/tests/test-ten-integration.js:85:34)\n    at async TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:25:13)","syscall":"getaddrinfo","timestamp":"2025-09-30T21:19:46.712Z"}
{"level":"info","message":"Processing multimodal input data with real TEN Framework...","timestamp":"2025-09-30T21:19:46.714Z"}
{"level":"error","message":"Failed to process multimodal input with real TEN Framework: this.multimodalProcessor.processInput is not a function","stack":"TypeError: this.multimodalProcessor.processInput is not a function\n    at TENFrameworkManager.processMultimodalInput (/app/src/ten-framework/ten-manager.js:407:60)\n    at TENTestSuite.testMultimodalProcessing (/app/tests/test-ten-integration.js:199:51)\n    at TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:34:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-09-30T21:19:46.714Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:19:46.714Z"}
{"level":"warn","message":"TEN Agent conversation generation failed, using fallback:","timestamp":"2025-09-30T21:19:46.715Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:21:34.310Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:21:34.324Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:21:34.324Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:21:34.324Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:21:34.324Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:21:34.324Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:21:34.325Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:21:34.325Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:22:24.116Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:22:24.141Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:22:24.141Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:22:24.141Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:22:24.141Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:22:24.142Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:22:24.142Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:22:24.142Z"}
{"cause":{"code":"EAI_AGAIN","errno":-3001,"hostname":"ten-agent","syscall":"getaddrinfo"},"code":"EAI_AGAIN","config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"maxBodyLength":-1,"maxContentLength":-1,"method":"get","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"http://ten-agent:8080/health","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errno":-3001,"hostname":"ten-agent","level":"error","message":"TEN Framework health check failed: getaddrinfo EAI_AGAIN ten-agent","name":"Error","request":{"_currentRequest":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":"[Circular]","_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_currentUrl":"http://ten-agent:8080/health","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"hostname":"ten-agent","maxBodyLength":null,"maxRedirects":21,"method":"GET","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":"[Circular]","chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":[],"map":{}},"agentKeepAliveTimeoutBuffer":1000,"defaultPort":443,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"defaultPort":443,"keepAlive":true,"noDelay":true,"path":null,"protocol":"https:","scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0}}},"path":"/health","pathname":"/health","port":"8080","protocol":"http:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":0,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"stack":"Error: getaddrinfo EAI_AGAIN ten-agent\n    at AxiosError.from (/app/node_modules/axios/dist/node/axios.cjs:905:14)\n    at RedirectableRequest.handleRequestError (/app/node_modules/axios/dist/node/axios.cjs:3326:25)\n    at RedirectableRequest.emit (node:events:508:28)\n    at eventHandlers.<computed> (/app/node_modules/follow-redirects/index.js:49:24)\n    at ClientRequest.emit (node:events:508:28)\n    at emitErrorEvent (node:_http_client:107:11)\n    at Socket.socketErrorListener (node:_http_client:574:5)\n    at Socket.emit (node:events:508:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at Axios.request (/app/node_modules/axios/dist/node/axios.cjs:4483:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TENFrameworkManager.healthCheck (/app/src/ten-framework/ten-manager.js:549:30)\n    at async TENTestSuite.testHealthCheck (/app/tests/test-ten-integration.js:89:34)\n    at async TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:26:13)","syscall":"getaddrinfo","timestamp":"2025-09-30T21:22:24.146Z"}
{"level":"info","message":"Processing multimodal input data with real TEN Framework...","timestamp":"2025-09-30T21:22:24.148Z"}
{"level":"error","message":"Failed to process multimodal input with real TEN Framework: this.callTENService is not a function","stack":"TypeError: this.callTENService is not a function\n    at Object.processMultimodal (/app/src/ten-framework/ten-manager.js:54:39)\n    at TENFrameworkManager.processMultimodalInput (/app/src/ten-framework/ten-manager.js:407:60)\n    at TENTestSuite.testMultimodalProcessing (/app/tests/test-ten-integration.js:203:51)\n    at TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:35:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-09-30T21:22:24.149Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:22:24.149Z"}
{"level":"warn","message":"TEN Agent conversation generation failed, using fallback:","timestamp":"2025-09-30T21:22:24.150Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:22:24.176Z"}
{"level":"warn","message":"TEN Agent conversation generation failed, using fallback:","timestamp":"2025-09-30T21:22:24.177Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:25:01.775Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:25:01.786Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:25:01.787Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:26:26.265Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:26:26.288Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:26:26.288Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:26:26.289Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:26:26.289Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:26:26.289Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:26:26.289Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:26:26.290Z"}
{"cause":{"code":"EAI_AGAIN","errno":-3001,"hostname":"ten-agent","syscall":"getaddrinfo"},"code":"EAI_AGAIN","config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"maxBodyLength":-1,"maxContentLength":-1,"method":"get","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"http://ten-agent:8080/health","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errno":-3001,"hostname":"ten-agent","level":"error","message":"TEN Framework health check failed: getaddrinfo EAI_AGAIN ten-agent","name":"Error","request":{"_currentRequest":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":"[Circular]","_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_currentUrl":"http://ten-agent:8080/health","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"hostname":"ten-agent","maxBodyLength":null,"maxRedirects":21,"method":"GET","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":"[Circular]","chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":[],"map":{}},"agentKeepAliveTimeoutBuffer":1000,"defaultPort":443,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"defaultPort":443,"keepAlive":true,"noDelay":true,"path":null,"protocol":"https:","scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0}}},"path":"/health","pathname":"/health","port":"8080","protocol":"http:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":0,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"stack":"Error: getaddrinfo EAI_AGAIN ten-agent\n    at AxiosError.from (/app/node_modules/axios/dist/node/axios.cjs:905:14)\n    at RedirectableRequest.handleRequestError (/app/node_modules/axios/dist/node/axios.cjs:3326:25)\n    at RedirectableRequest.emit (node:events:508:28)\n    at eventHandlers.<computed> (/app/node_modules/follow-redirects/index.js:49:24)\n    at ClientRequest.emit (node:events:508:28)\n    at emitErrorEvent (node:_http_client:107:11)\n    at Socket.socketErrorListener (node:_http_client:574:5)\n    at Socket.emit (node:events:508:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at Axios.request (/app/node_modules/axios/dist/node/axios.cjs:4483:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TENFrameworkManager.healthCheck (/app/src/ten-framework/ten-manager.js:550:30)\n    at async TENTestSuite.testHealthCheck (/app/tests/test-ten-integration.js:89:34)\n    at async TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:26:13)","syscall":"getaddrinfo","timestamp":"2025-09-30T21:26:26.294Z"}
{"level":"info","message":"Processing multimodal input data with real TEN Framework...","timestamp":"2025-09-30T21:26:26.296Z"}
{"level":"error","message":"TEN Framework service call failed for /api/multimodal/process:","timestamp":"2025-09-30T21:26:26.300Z"}
{"level":"error","message":"Failed to process multimodal input with real TEN Framework: medicalAgent.performMultimodalDiagnosis is not a function","stack":"TypeError: medicalAgent.performMultimodalDiagnosis is not a function\n    at TENFrameworkManager.processMultimodalInput (/app/src/ten-framework/ten-manager.js:411:50)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TENTestSuite.testMultimodalProcessing (/app/tests/test-ten-integration.js:203:29)\n    at async TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:35:13)","timestamp":"2025-09-30T21:26:26.300Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:26:26.301Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:26:26.304Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:26:26.332Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:26:26.337Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:27:19.570Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:27:19.583Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:27:19.583Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:27:19.584Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:27:19.584Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:27:19.584Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:27:19.584Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:27:19.584Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:27:40.300Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:27:40.324Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:27:40.324Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:27:40.324Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:27:40.324Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:27:40.325Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:27:40.325Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:27:40.325Z"}
{"cause":{"code":"EAI_AGAIN","errno":-3001,"hostname":"ten-agent","syscall":"getaddrinfo"},"code":"EAI_AGAIN","config":{"adapter":["xhr","http","fetch"],"allowAbsoluteUrls":true,"env":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"maxBodyLength":-1,"maxContentLength":-1,"method":"get","timeout":0,"transformRequest":[null],"transformResponse":[null],"transitional":{"clarifyTimeoutError":false,"forcedJSONParsing":true,"silentJSONParsing":true},"url":"http://ten-agent:8080/health","xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN"},"errno":-3001,"hostname":"ten-agent","level":"error","message":"TEN Framework health check failed: getaddrinfo EAI_AGAIN ten-agent","name":"Error","request":{"_currentRequest":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":"[Circular]","_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_currentUrl":"http://ten-agent:8080/health","_ended":true,"_ending":true,"_events":{},"_eventsCount":3,"_options":{"agents":{},"beforeRedirects":{},"headers":{"Accept":"application/json, text/plain, */*","Accept-Encoding":"gzip, compress, deflate, br","Authorization":"Bearer your-ten-api-key","User-Agent":"axios/1.12.2"},"hostname":"ten-agent","maxBodyLength":null,"maxRedirects":21,"method":"GET","nativeProtocols":{"http:":{"METHODS":["ACL","BIND","CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LINK","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCALENDAR","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","QUERY","REBIND","REPORT","SEARCH","SOURCE","SUBSCRIBE","TRACE","UNBIND","UNLINK","UNLOCK","UNSUBSCRIBE"],"STATUS_CODES":{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a Teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Too Early","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"},"globalAgent":{"_events":{},"_eventsCount":2,"agentKeepAliveTimeoutBuffer":1000,"defaultPort":80,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"keepAlive":true,"noDelay":true,"path":null,"scheduling":"lifo","timeout":5000},"protocol":"http:","requests":{},"scheduling":"lifo","sockets":{"ten-agent:8080:":[{"_closeAfterHandlingError":false,"_events":{"close":[null,null,null],"connect":[null,null,null],"timeout":[null,null]},"_eventsCount":8,"_hadError":true,"_host":"ten-agent","_httpMessage":{"_closed":false,"_contentLength":0,"_defaultKeepAlive":true,"_ended":false,"_events":{},"_eventsCount":7,"_hasBody":true,"_header":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_headerSent":true,"_keepAliveTimeout":0,"_last":true,"_redirectable":"[Circular]","_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_trailer":"","aborted":false,"agent":"[Circular]","chunkedEncoding":false,"destroyed":false,"finished":true,"host":"ten-agent","maxHeadersCount":null,"maxRequestsOnConnectionReached":false,"method":"GET","outputData":[],"outputSize":0,"parser":null,"path":"/health","protocol":"http:","res":null,"reusedSocket":false,"sendDate":false,"shouldKeepAlive":true,"strictContentLength":false,"upgradeOrConnect":false,"useChunkedEncodingByDefault":false,"writable":true},"_parent":null,"_pendingData":"GET /health HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nAuthorization: Bearer your-ten-api-key\r\nUser-Agent: axios/1.12.2\r\nAccept-Encoding: gzip, compress, deflate, br\r\nHost: ten-agent:8080\r\nConnection: keep-alive\r\n\r\n","_pendingEncoding":"latin1","_readableState":{"awaitDrainWriters":null,"buffer":[],"bufferIndex":0,"highWaterMark":65536,"length":0,"pipes":[]},"_server":null,"_sockname":null,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":225,"pendingcb":1,"writelen":225},"allowHalfOpen":false,"connecting":false,"parser":null,"server":null,"timeout":5000}]},"totalSocketCount":1},"maxHeaderSize":16384},"https:":{"globalAgent":{"_events":{},"_eventsCount":2,"_sessionCache":{"list":[],"map":{}},"agentKeepAliveTimeoutBuffer":1000,"defaultPort":443,"freeSockets":{},"keepAlive":true,"keepAliveMsecs":1000,"maxCachedSessions":100,"maxFreeSockets":256,"maxSockets":null,"maxTotalSockets":null,"options":{"defaultPort":443,"keepAlive":true,"noDelay":true,"path":null,"protocol":"https:","scheduling":"lifo","timeout":5000},"protocol":"https:","requests":{},"scheduling":"lifo","sockets":{},"totalSocketCount":0}}},"path":"/health","pathname":"/health","port":"8080","protocol":"http:"},"_redirectCount":0,"_redirects":[],"_requestBodyBuffers":[],"_requestBodyLength":0,"_writableState":{"bufferedIndex":0,"corked":0,"highWaterMark":65536,"length":0,"pendingcb":0,"writelen":0}},"stack":"Error: getaddrinfo EAI_AGAIN ten-agent\n    at AxiosError.from (/app/node_modules/axios/dist/node/axios.cjs:905:14)\n    at RedirectableRequest.handleRequestError (/app/node_modules/axios/dist/node/axios.cjs:3326:25)\n    at RedirectableRequest.emit (node:events:508:28)\n    at eventHandlers.<computed> (/app/node_modules/follow-redirects/index.js:49:24)\n    at ClientRequest.emit (node:events:508:28)\n    at emitErrorEvent (node:_http_client:107:11)\n    at Socket.socketErrorListener (node:_http_client:574:5)\n    at Socket.emit (node:events:508:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at Axios.request (/app/node_modules/axios/dist/node/axios.cjs:4483:41)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TENFrameworkManager.healthCheck (/app/src/ten-framework/ten-manager.js:556:30)\n    at async TENTestSuite.testHealthCheck (/app/tests/test-ten-integration.js:89:34)\n    at async TENTestSuite.runAllTests (/app/tests/test-ten-integration.js:26:13)","syscall":"getaddrinfo","timestamp":"2025-09-30T21:27:40.328Z"}
{"level":"info","message":"Processing multimodal input data with real TEN Framework...","timestamp":"2025-09-30T21:27:40.330Z"}
{"level":"error","message":"TEN Framework service call failed for /api/multimodal/process:","timestamp":"2025-09-30T21:27:40.333Z"}
{"level":"info","message":"Real multimodal processing completed successfully","timestamp":"2025-09-30T21:27:40.333Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:27:40.333Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:27:40.336Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:27:40.361Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:27:40.366Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:28:34.073Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:28:34.086Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:30:41.979Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:30:41.990Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:30:41.990Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:30:41.990Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:30:41.991Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:30:41.991Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:30:41.991Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:30:41.991Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:31:05.173Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:31:05.177Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:32:17.489Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:32:17.494Z"}
{"level":"info","message":"Initializing TEN Framework service connection...","timestamp":"2025-09-30T21:36:26.327Z"}
{"level":"warn","message":"TEN Framework service not available, using fallback mode:","timestamp":"2025-09-30T21:36:26.339Z"}
{"level":"info","message":"TEN Framework connection test result: false","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"About to create medical agent...","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"Creating multimodal medical diagnosis agent for TEN Framework integration...","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"Medical diagnosis agent created successfully for TEN Framework integration","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"Medical agent creation completed","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"TEN Framework service connection initialized successfully","timestamp":"2025-09-30T21:36:26.340Z"}
{"level":"info","message":"Generating conversation response using TEN Framework integration...","timestamp":"2025-09-30T21:37:54.608Z"}
{"level":"error","message":"TEN Framework service call failed for /api/agents/generate-response:","timestamp":"2025-09-30T21:37:54.614Z"}
